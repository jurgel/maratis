# Read the build configuration file and update the environment
# 2011-02-04, Davide Bacchet (davide.bacchet@gmail.com)


# get user configuration file from command line
UserConfigFile = ARGUMENTS.get('configfile', None)
import os

if UserConfigFile==None and os.path.exists(Dir('#').abspath+'/configfile'):
    UserConfigFile='configfile'

if UserConfigFile!=None:
    print 'Reading configuration options from ',  UserConfigFile       

       
# create the option container object
opts = Variables(UserConfigFile, ARGUMENTS)

basepath=str(Dir('#').srcnode())
# options:

opts.Add( EnumVariable( 'build_mode',
                        'current build mode',
                        'release',
                        ['debug','release']) )
                                            
opts.Add( PathVariable( 'thirdparty_area',
                        'path to the 3rdparty area',
                        os.path.join('..','..','3rdparty') ) )

opts.Add( PathVariable( 'build_area',
                        'path to the scons building area',
                        os.path.join(basepath,'build'),
                        PathVariable.PathIsDirCreate ) )

opts.Add( PathVariable( 'prod_area',
                        'path to the prod area',
                        os.path.join(basepath,'prod'),
                        PathVariable.PathIsDirCreate ) )

opts.Add( EnumVariable( 'MSVC_VERSION',
                      'current visual compiler',
                      '9.0Exp',
                      ['8.0','9.0Exp']) )
                      
opts.Add( EnumVariable( 'TARGET_ARCH',
                      'target arch',
                      'i386',
                      ['i386','x86_64']) )
                      
Help('\n\nAdd the option configfile=file to supply a recorded set of options\n')                      
                                       
Return('opts')



